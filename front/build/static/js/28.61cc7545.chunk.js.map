{"version":3,"sources":["../node_modules/codemirror/mode/jsx/jsx.js","../node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","Context","state","mode","depth","prev","this","copyContext","context","copyState","defineMode","config","modeConfig","xmlMode","getMode","name","allowMissing","multilineTagIndentPastTag","allowMissingTagName","jsMode","base","flatXMLIndent","tagName","result","indent","token","stream","cx","match","skipToEnd","peek","skipAttribute","xmlContext","startOfLine","indentUnit","lexical","indented","startState","stop","style","cur","current","test","indexOf","backUp","length","xmlToken","expressionAllowed","skipExpression","jsToken","textAfter","fullLine","innerMode","defineMIME","typescript","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","caseFold","xmlConfig","editorConf","config_","type","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","inTag","baseState","tagStart","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","terminator","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","Pass","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","xmlCurrentTag","close","xmlCurrentContext","push","reverse","mimeModes"],"mappings":"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","file":"static/js/28.61cc7545.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\"; // Depth means the amount of open braces in JS context, in XML\n  // context 0 means not in tag, 1 means in tag, and 2 means in tag\n  // and js block comment.\n\n  function Context(state, mode, depth, prev) {\n    this.state = state;\n    this.mode = mode;\n    this.depth = depth;\n    this.prev = prev;\n  }\n\n  function copyContext(context) {\n    return new Context(CodeMirror.copyState(context.mode, context.state), context.mode, context.depth, context.prev && copyContext(context.prev));\n  }\n\n  CodeMirror.defineMode(\"jsx\", function (config, modeConfig) {\n    var xmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      allowMissing: true,\n      multilineTagIndentPastTag: false,\n      allowMissingTagName: true\n    });\n    var jsMode = CodeMirror.getMode(config, modeConfig && modeConfig.base || \"javascript\");\n\n    function flatXMLIndent(state) {\n      var tagName = state.tagName;\n      state.tagName = null;\n      var result = xmlMode.indent(state, \"\", \"\");\n      state.tagName = tagName;\n      return result;\n    }\n\n    function token(stream, state) {\n      if (state.context.mode == xmlMode) return xmlToken(stream, state, state.context);else return jsToken(stream, state, state.context);\n    }\n\n    function xmlToken(stream, state, cx) {\n      if (cx.depth == 2) {\n        // Inside a JS /* */ comment\n        if (stream.match(/^.*?\\*\\//)) cx.depth = 1;else stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.peek() == \"{\") {\n        xmlMode.skipAttribute(cx.state);\n        var indent = flatXMLIndent(cx.state),\n            xmlContext = cx.state.context; // If JS starts on same line as tag\n\n        if (xmlContext && stream.match(/^[^>]*>\\s*$/, false)) {\n          while (xmlContext.prev && !xmlContext.startOfLine) {\n            xmlContext = xmlContext.prev;\n          } // If tag starts the line, use XML indentation level\n\n\n          if (xmlContext.startOfLine) indent -= config.indentUnit; // Else use JS indentation level\n          else if (cx.prev.state.lexical) indent = cx.prev.state.lexical.indented; // Else if inside of tag\n        } else if (cx.depth == 1) {\n          indent += config.indentUnit;\n        }\n\n        state.context = new Context(CodeMirror.startState(jsMode, indent), jsMode, 0, state.context);\n        return null;\n      }\n\n      if (cx.depth == 1) {\n        // Inside of tag\n        if (stream.peek() == \"<\") {\n          // Tag inside of tag\n          xmlMode.skipAttribute(cx.state);\n          state.context = new Context(CodeMirror.startState(xmlMode, flatXMLIndent(cx.state)), xmlMode, 0, state.context);\n          return null;\n        } else if (stream.match(\"//\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (stream.match(\"/*\")) {\n          cx.depth = 2;\n          return token(stream, state);\n        }\n      }\n\n      var style = xmlMode.token(stream, cx.state),\n          cur = stream.current(),\n          stop;\n\n      if (/\\btag\\b/.test(style)) {\n        if (/>$/.test(cur)) {\n          if (cx.state.context) cx.depth = 0;else state.context = state.context.prev;\n        } else if (/^</.test(cur)) {\n          cx.depth = 1;\n        }\n      } else if (!style && (stop = cur.indexOf(\"{\")) > -1) {\n        stream.backUp(cur.length - stop);\n      }\n\n      return style;\n    }\n\n    function jsToken(stream, state, cx) {\n      if (stream.peek() == \"<\" && jsMode.expressionAllowed(stream, cx.state)) {\n        jsMode.skipExpression(cx.state);\n        state.context = new Context(CodeMirror.startState(xmlMode, jsMode.indent(cx.state, \"\", \"\")), xmlMode, 0, state.context);\n        return null;\n      }\n\n      var style = jsMode.token(stream, cx.state);\n\n      if (!style && cx.depth != null) {\n        var cur = stream.current();\n\n        if (cur == \"{\") {\n          cx.depth++;\n        } else if (cur == \"}\") {\n          if (--cx.depth == 0) state.context = state.context.prev;\n        }\n      }\n\n      return style;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          context: new Context(CodeMirror.startState(jsMode), jsMode)\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          context: copyContext(state.context)\n        };\n      },\n      token: token,\n      indent: function indent(state, textAfter, fullLine) {\n        return state.context.mode.indent(state.context.state, textAfter, fullLine);\n      },\n      innerMode: function innerMode(state) {\n        return state.context;\n      }\n    };\n  }, \"xml\", \"javascript\");\n  CodeMirror.defineMIME(\"text/jsx\", \"jsx\");\n  CodeMirror.defineMIME(\"text/typescript-jsx\", {\n    name: \"jsx\",\n    base: {\n      name: \"javascript\",\n      typescript: true\n    }\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});"],"sourceRoot":""}