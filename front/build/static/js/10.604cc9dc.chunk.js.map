{"version":3,"sources":["../node_modules/codemirror/mode/htmlembedded/htmlembedded.js","../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","config","parserConfig","closeComment","multiplexingMode","getMode","open","openComment","close","delimStyle","mode","token","stream","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","defineMIME","name","mod","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","copyState","state","curInner","oldContent","sol","this","pos","parseDelimiters","match","innerToken","innerStyle","cutOff","Infinity","i","other","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","to","tag","dest","source","unshift","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","local"],"mappings":"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","file":"static/js/10.604cc9dc.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/multiplex\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function (config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\";\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {\n        token: function token(stream) {\n          stream.skipTo(closeComment) || stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n  CodeMirror.defineMIME(\"application/x-ejs\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"javascript\"\n  });\n  CodeMirror.defineMIME(\"application/x-aspx\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-csharp\"\n  });\n  CodeMirror.defineMIME(\"application/x-jsp\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-java\"\n  });\n  CodeMirror.defineMIME(\"application/x-erb\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"ruby\"\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer\n  /*, others */\n  ) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n        };\n      },\n      token: function token(stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n              oldContent = stream.string;\n\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.innerActive = other; // Get the outer indent, making sure to handle CodeMirror.Pass\n\n              var outerIndent = 0;\n\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n              oldContent = stream.string;\n\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n\n          var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n\n          return innerToken;\n        }\n      },\n      indent: function indent(state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function blankLine(state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function innerMode(state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});"],"sourceRoot":""}