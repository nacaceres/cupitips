{"version":3,"sources":["../node_modules/codemirror/mode/haml/haml.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","stream","state","peek","rubyState","tokenize","length","next","html","ruby","match","skipToEnd","token","ch","previousToken","style","indented","startOfLine","htmlState","startState","copyState","sol","indentation","eatSpace","eol","backUp","defineMIME","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","eat","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","this","prev","context","indent","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","maybeBackup","local","line","innerMode","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","closing","newtok","tokenBase","readBlockComment","m","phrase","mayIndent","readQuoted","start","pos","found","escaped","indexOf","regexpAhead","embed","delim","propertyIsEnumerable","pop","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","unescaped","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold"],"mappings":"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","file":"static/js/14.aca7384b.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\"; // full haml mode. This handled embedded ruby and html fragments too\n\n  CodeMirror.defineMode(\"haml\", function (config) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"htmlmixed\"\n    });\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function (stream, state) {\n        var ch = stream.peek();\n\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek(); // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n\n      if (state.previousToken.style == \"comment\") {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if (ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      } // donot handle --> as valid ruby, make it HTML close comment instead\n\n\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\")) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" || state.previousToken.style == \"closeAttributeTag\" || state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function startState() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: {\n            style: null,\n            indented: 0\n          },\n          tokenize: html\n        };\n      },\n      copyState: function copyState(state) {\n        return {\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n      token: function token(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false; // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n\n        if (style && style != \"commentLine\") {\n          state.previousToken = {\n            style: style,\n            indented: state.indented\n          };\n        } // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n\n\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        } // reprocess some of the specific style tag when finish setting previousToken\n\n\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"ruby\", function (config) {\n    function wordObj(words) {\n      var o = {};\n\n      for (var i = 0, e = words.length; i < e; ++i) {\n        o[words[i]] = true;\n      }\n\n      return o;\n    }\n\n    var keywords = wordObj([\"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\", \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\", \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\", \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"]);\n    var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\", \"catch\", \"loop\", \"proc\", \"begin\"]);\n    var dedentWords = wordObj([\"end\", \"until\"]);\n    var opening = {\n      \"[\": \"]\",\n      \"{\": \"}\",\n      \"(\": \")\"\n    };\n    var closing = {\n      \"]\": \"[\",\n      \"}\": \"{\",\n      \")\": \"(\"\n    };\n    var curPunc;\n\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n\n    function tokenBase(stream, state) {\n      if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n        state.tokenize.push(readBlockComment);\n        return \"comment\";\n      }\n\n      if (stream.eatSpace()) return null;\n      var ch = stream.next(),\n          m;\n\n      if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n        return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n      } else if (ch == \"/\") {\n        if (regexpAhead(stream)) return chain(readQuoted(ch, \"string-2\", true), stream, state);else return \"operator\";\n      } else if (ch == \"%\") {\n        var style = \"string\",\n            embed = true;\n        if (stream.eat(\"s\")) style = \"atom\";else if (stream.eat(/[WQ]/)) style = \"string\";else if (stream.eat(/[r]/)) style = \"string-2\";else if (stream.eat(/[wxq]/)) {\n          style = \"string\";\n          embed = false;\n        }\n        var delim = stream.eat(/[^\\w\\s=]/);\n        if (!delim) return \"operator\";\n        if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n        return chain(readQuoted(delim, style, embed, true), stream, state);\n      } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n        return chain(readHereDoc(m[2], m[1]), stream, state);\n      } else if (ch == \"0\") {\n        if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);else stream.eatWhile(/[0-7]/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n        return \"number\";\n      } else if (ch == \"?\") {\n        while (stream.match(/^\\\\[CM]-/)) {}\n\n        if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);else stream.next();\n        return \"string\";\n      } else if (ch == \":\") {\n        if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n        if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state); // :> :>> :< :<< are valid symbols\n\n        if (stream.eat(/[\\<\\>]/)) {\n          stream.eat(/[\\<\\>]/);\n          return \"atom\";\n        } // :+ :- :/ :* :| :& :! are valid symbols\n\n\n        if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n          return \"atom\";\n        } // Symbols can't start by a digit\n\n\n        if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n          stream.eatWhile(/[\\w$\\xa1-\\uffff]/); // Only one ? ! = is allowed and only as the last character\n\n          stream.eat(/[\\?\\!\\=]/);\n          return \"atom\";\n        }\n\n        return \"operator\";\n      } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n        stream.eat(\"@\");\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        return \"variable-2\";\n      } else if (ch == \"$\") {\n        if (stream.eat(/[a-zA-Z_]/)) {\n          stream.eatWhile(/[\\w]/);\n        } else if (stream.eat(/\\d/)) {\n          stream.eat(/\\d/);\n        } else {\n          stream.next(); // Must be a special global like $: or $!\n        }\n\n        return \"variable-3\";\n      } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        stream.eat(/[\\?\\!]/);\n        if (stream.eat(\":\")) return \"atom\";\n        return \"ident\";\n      } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n        curPunc = \"|\";\n        return null;\n      } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      } else if (ch == \"-\" && stream.eat(\">\")) {\n        return \"arrow\";\n      } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n        var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n        if (ch == \".\" && !more) curPunc = \".\";\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n\n    function regexpAhead(stream) {\n      var start = stream.pos,\n          depth = 0,\n          next,\n          found = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (!escaped) {\n          if (\"[{(\".indexOf(next) > -1) {\n            depth++;\n          } else if (\"]})\".indexOf(next) > -1) {\n            depth--;\n            if (depth < 0) break;\n          } else if (next == \"/\" && depth == 0) {\n            found = true;\n            break;\n          }\n\n          escaped = next == \"\\\\\";\n        } else {\n          escaped = false;\n        }\n      }\n\n      stream.backUp(stream.pos - start);\n      return found;\n    }\n\n    function tokenBaseUntilBrace(depth) {\n      if (!depth) depth = 1;\n      return function (stream, state) {\n        if (stream.peek() == \"}\") {\n          if (depth == 1) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else {\n            state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n          }\n        } else if (stream.peek() == \"{\") {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n        }\n\n        return tokenBase(stream, state);\n      };\n    }\n\n    function tokenBaseOnce() {\n      var alreadyCalled = false;\n      return function (stream, state) {\n        if (alreadyCalled) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length - 1](stream, state);\n        }\n\n        alreadyCalled = true;\n        return tokenBase(stream, state);\n      };\n    }\n\n    function readQuoted(quote, style, embed, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        if (state.context.type === 'read-quoted-paused') {\n          state.context = state.context.prev;\n          stream.eat(\"}\");\n        }\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              if (quote == \"}\") {\n                state.context = {\n                  prev: state.context,\n                  type: 'read-quoted-paused'\n                };\n              }\n\n              state.tokenize.push(tokenBaseUntilBrace());\n              break;\n            } else if (/[@\\$]/.test(stream.peek())) {\n              state.tokenize.push(tokenBaseOnce());\n              break;\n            }\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return style;\n      };\n    }\n\n    function readHereDoc(phrase, mayIndent) {\n      return function (stream, state) {\n        if (mayIndent) stream.eatSpace();\n        if (stream.match(phrase)) state.tokenize.pop();else stream.skipToEnd();\n        return \"string\";\n      };\n    }\n\n    function readBlockComment(stream, state) {\n      if (stream.sol() && stream.match(\"=end\") && stream.eol()) state.tokenize.pop();\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    return {\n      startState: function startState() {\n        return {\n          tokenize: [tokenBase],\n          indented: 0,\n          context: {\n            type: \"top\",\n            indented: -config.indentUnit\n          },\n          continuedLine: false,\n          lastTok: null,\n          varList: false\n        };\n      },\n      token: function token(stream, state) {\n        curPunc = null;\n        if (stream.sol()) state.indented = stream.indentation();\n        var style = state.tokenize[state.tokenize.length - 1](stream, state),\n            kwtype;\n        var thisTok = curPunc;\n\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = state.lastTok == \".\" ? \"property\" : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : /^[A-Z]/.test(word) ? \"tag\" : state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList ? \"def\" : \"variable\";\n\n          if (style == \"keyword\") {\n            thisTok = word;\n            if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation()) kwtype = \"indent\";else if (word == \"do\" && state.context.indented < state.indented) kwtype = \"indent\";\n          }\n        }\n\n        if (curPunc || style && style != \"comment\") state.lastTok = thisTok;\n        if (curPunc == \"|\") state.varList = !state.varList;\n        if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc)) state.context = {\n          prev: state.context,\n          type: curPunc || style,\n          indented: state.indented\n        };else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev) state.context = state.context.prev;\n        if (stream.eol()) state.continuedLine = curPunc == \"\\\\\" || style == \"operator\";\n        return style;\n      },\n      indent: function indent(state, textAfter) {\n        if (state.tokenize[state.tokenize.length - 1] != tokenBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0);\n        var ct = state.context;\n        var closed = ct.type == closing[firstChar] || ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n        return ct.indented + (closed ? 0 : config.indentUnit) + (state.continuedLine ? config.indentUnit : 0);\n      },\n      electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n});"],"sourceRoot":""}