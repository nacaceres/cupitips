{"version":3,"sources":["../node_modules/codemirror/mode/php/php.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","keywords","str","obj","words","split","i","length","matchSequence","list","end","escapes","phpString","stream","state","patterns","match","tokenize","slice","closing","escaped","eol","tokStack","pop","next","phpString_","phpKeywords","phpAtoms","phpBuiltin","registerHelper","join","phpConfig","name","helperType","blockKeywords","defKeywords","atoms","builtin","multiLineStrings","hooks","eatWhile","before","quoted","eat","delim","current","push","_stream","defineMode","config","parserConfig","htmlMode","getMode","phpMode","startState","html","php","startOpen","curMode","curState","pending","copyState","cur","htmlNew","phpNew","token","isPHP","sol","context","prev","indent","style","pos","m","openPHP","search","test","backUp","textAfter","line","blockCommentStart","blockCommentEnd","lineComment","innerMode","mode","defineMIME","mod","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","ch","inBlock","doctype","depth","inTag","baseState","tagName","tagStart","quote","closure","isInAttribute","inAttribute","stringStartCol","column","terminator","Context","startOfLine","this","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","tags","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","maybeBackup","local"],"mappings":"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","file":"static/js/17.ad00277d.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {},\n        words = str.split(\" \");\n\n    for (var i = 0; i < words.length; ++i) {\n      obj[words[i]] = true;\n    }\n\n    return obj;\n  } // Helper for phpString\n\n\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n\n      for (var i = 0; i < patterns.length; i++) {\n        if (stream.match(patterns[i][0])) {\n          state.tokenize = matchSequence(list.slice(1), end);\n          return patterns[i][1];\n        }\n      }\n\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n\n  function phpString(closing, escapes) {\n    return function (stream, state) {\n      return phpString_(stream, state, closing, escapes);\n    };\n  }\n\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    } // Simple syntax\n\n\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([[[\"[\", null]], [[/\\d[\\w\\.]*/, \"number\"], [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"], [/[\\w\\$]+/, \"variable\"]], [[\"]\", null]]], closing, escapes);\n      }\n\n      if (stream.match(/\\-\\>\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([[[\"->\", null]], [[/[\\w]+/, \"variable\"]]], closing, escapes);\n      }\n\n      return \"variable-2\";\n    }\n\n    var escaped = false; // Normal string\n\n    while (!stream.eol() && (escaped || escapes === false || !stream.match(\"{$\", false) && !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop();\n        state.tokStack.pop();\n        break;\n      }\n\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" + \"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final \" + \"for foreach function global goto if implements interface instanceof namespace \" + \"new or private protected public static switch throw trait try use var while xor \" + \"die echo empty exit eval include include_once isset list require require_once return \" + \"print unset __halt_compiler self static parent yield insteadof finally\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function $(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function _(stream, state) {\n        var before;\n\n        if (before = stream.match(/<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n\n        return false;\n      },\n      \"#\": function _(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) {\n          stream.next();\n        }\n\n        return \"comment\";\n      },\n      \"/\": function _(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) {\n            stream.next();\n          }\n\n          return \"comment\";\n        }\n\n        return false;\n      },\n      '\"': function _(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function _(_stream, state) {\n        if (state.tokStack && state.tokStack.length) state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function _(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 && ! --state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n\n        return false;\n      }\n    }\n  };\n  CodeMirror.defineMode(\"php\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, parserConfig && parserConfig.htmlMode || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"));\n          state.curState = state.php;\n          return \"meta\";\n        }\n\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n\n        if (state.pending) state.pending = null;\n        var cur = stream.current(),\n            openPHP = cur.search(/<\\?/),\n            m;\n\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];else state.pending = {\n            end: stream.pos,\n            style: style\n          };\n          stream.backUp(cur.length - openPHP);\n        }\n\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function startState() {\n        var html = CodeMirror.startState(htmlMode);\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null;\n        return {\n          html: html,\n          php: php,\n          curMode: parserConfig.startOpen ? phpMode : htmlMode,\n          curState: parserConfig.startOpen ? php : html,\n          pending: null\n        };\n      },\n      copyState: function copyState(state) {\n        var html = state.html,\n            htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php,\n            phpNew = php && CodeMirror.copyState(phpMode, php),\n            cur;\n        if (state.curMode == htmlMode) cur = htmlNew;else cur = phpNew;\n        return {\n          html: htmlNew,\n          php: phpNew,\n          curMode: state.curMode,\n          curState: cur,\n          pending: state.pending\n        };\n      },\n      token: dispatch,\n      indent: function indent(state, textAfter, line) {\n        if (state.curMode != phpMode && /^\\s*<\\//.test(textAfter) || state.curMode == phpMode && /^\\?>/.test(textAfter)) return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n      innerMode: function innerMode(state) {\n        return {\n          state: state.curState,\n          mode: state.curMode\n        };\n      }\n    };\n  }, \"htmlmixed\", \"clike\");\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {\n    name: \"php\",\n    startOpen: true\n  });\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var htmlConfig = {\n    autoSelfClosers: {\n      'area': true,\n      'base': true,\n      'br': true,\n      'col': true,\n      'command': true,\n      'embed': true,\n      'frame': true,\n      'hr': true,\n      'img': true,\n      'input': true,\n      'keygen': true,\n      'link': true,\n      'meta': true,\n      'param': true,\n      'source': true,\n      'track': true,\n      'wbr': true,\n      'menuitem': true\n    },\n    implicitlyClosed: {\n      'dd': true,\n      'li': true,\n      'optgroup': true,\n      'option': true,\n      'p': true,\n      'rp': true,\n      'rt': true,\n      'tbody': true,\n      'td': true,\n      'tfoot': true,\n      'th': true,\n      'tr': true\n    },\n    contextGrabbers: {\n      'dd': {\n        'dd': true,\n        'dt': true\n      },\n      'dt': {\n        'dd': true,\n        'dt': true\n      },\n      'li': {\n        'li': true\n      },\n      'option': {\n        'option': true,\n        'optgroup': true\n      },\n      'optgroup': {\n        'optgroup': true\n      },\n      'p': {\n        'address': true,\n        'article': true,\n        'aside': true,\n        'blockquote': true,\n        'dir': true,\n        'div': true,\n        'dl': true,\n        'fieldset': true,\n        'footer': true,\n        'form': true,\n        'h1': true,\n        'h2': true,\n        'h3': true,\n        'h4': true,\n        'h5': true,\n        'h6': true,\n        'header': true,\n        'hgroup': true,\n        'hr': true,\n        'menu': true,\n        'nav': true,\n        'ol': true,\n        'p': true,\n        'pre': true,\n        'section': true,\n        'table': true,\n        'ul': true\n      },\n      'rp': {\n        'rp': true,\n        'rt': true\n      },\n      'rt': {\n        'rp': true,\n        'rt': true\n      },\n      'tbody': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'td': {\n        'td': true,\n        'th': true\n      },\n      'tfoot': {\n        'tbody': true\n      },\n      'th': {\n        'td': true,\n        'th': true\n      },\n      'thead': {\n        'tbody': true,\n        'tfoot': true\n      },\n      'tr': {\n        'tr': true\n      }\n    },\n    doNotIndent: {\n      \"pre\": true\n    },\n    allowUnquoted: true,\n    allowMissing: true,\n    caseFold: true\n  };\n  var xmlConfig = {\n    autoSelfClosers: {},\n    implicitlyClosed: {},\n    contextGrabbers: {},\n    doNotIndent: {},\n    allowUnquoted: false,\n    allowMissing: false,\n    allowMissingTagName: false,\n    caseFold: false\n  };\n  CodeMirror.defineMode(\"xml\", function (editorConf, config_) {\n    var indentUnit = editorConf.indentUnit;\n    var config = {};\n    var defaults = config_.htmlMode ? htmlConfig : xmlConfig;\n\n    for (var prop in defaults) {\n      config[prop] = defaults[prop];\n    }\n\n    for (var prop in config_) {\n      config[prop] = config_[prop];\n    } // Return variables for tokenizers\n\n\n    var type, setStyle;\n\n    function inText(stream, state) {\n      function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n      }\n\n      var ch = stream.next();\n\n      if (ch == \"<\") {\n        if (stream.eat(\"!\")) {\n          if (stream.eat(\"[\")) {\n            if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));else return null;\n          } else if (stream.match(\"--\")) {\n            return chain(inBlock(\"comment\", \"-->\"));\n          } else if (stream.match(\"DOCTYPE\", true, true)) {\n            stream.eatWhile(/[\\w\\._\\-]/);\n            return chain(doctype(1));\n          } else {\n            return null;\n          }\n        } else if (stream.eat(\"?\")) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          state.tokenize = inBlock(\"meta\", \"?>\");\n          return \"meta\";\n        } else {\n          type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n          state.tokenize = inTag;\n          return \"tag bracket\";\n        }\n      } else if (ch == \"&\") {\n        var ok;\n\n        if (stream.eat(\"#\")) {\n          if (stream.eat(\"x\")) {\n            ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n          } else {\n            ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n          }\n        } else {\n          ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n        }\n\n        return ok ? \"atom\" : \"error\";\n      } else {\n        stream.eatWhile(/[^&<]/);\n        return null;\n      }\n    }\n\n    inText.isInText = true;\n\n    function inTag(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \">\" || ch == \"/\" && stream.eat(\">\")) {\n        state.tokenize = inText;\n        type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n        return \"tag bracket\";\n      } else if (ch == \"=\") {\n        type = \"equals\";\n        return null;\n      } else if (ch == \"<\") {\n        state.tokenize = inText;\n        state.state = baseState;\n        state.tagName = state.tagStart = null;\n        var next = state.tokenize(stream, state);\n        return next ? next + \" tag error\" : \"tag error\";\n      } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = inAttribute(ch);\n        state.stringStartCol = stream.column();\n        return state.tokenize(stream, state);\n      } else {\n        stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n        return \"word\";\n      }\n    }\n\n    function inAttribute(quote) {\n      var closure = function closure(stream, state) {\n        while (!stream.eol()) {\n          if (stream.next() == quote) {\n            state.tokenize = inTag;\n            break;\n          }\n        }\n\n        return \"string\";\n      };\n\n      closure.isInAttribute = true;\n      return closure;\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = inText;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    function doctype(depth) {\n      return function (stream, state) {\n        var ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == \"<\") {\n            state.tokenize = doctype(depth + 1);\n            return state.tokenize(stream, state);\n          } else if (ch == \">\") {\n            if (depth == 1) {\n              state.tokenize = inText;\n              break;\n            } else {\n              state.tokenize = doctype(depth - 1);\n              return state.tokenize(stream, state);\n            }\n          }\n        }\n\n        return \"meta\";\n      };\n    }\n\n    function Context(state, tagName, startOfLine) {\n      this.prev = state.context;\n      this.tagName = tagName;\n      this.indent = state.indented;\n      this.startOfLine = startOfLine;\n      if (config.doNotIndent.hasOwnProperty(tagName) || state.context && state.context.noIndent) this.noIndent = true;\n    }\n\n    function popContext(state) {\n      if (state.context) state.context = state.context.prev;\n    }\n\n    function maybePopContext(state, nextTagName) {\n      var parentTagName;\n\n      while (true) {\n        if (!state.context) {\n          return;\n        }\n\n        parentTagName = state.context.tagName;\n\n        if (!config.contextGrabbers.hasOwnProperty(parentTagName) || !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n          return;\n        }\n\n        popContext(state);\n      }\n    }\n\n    function baseState(type, stream, state) {\n      if (type == \"openTag\") {\n        state.tagStart = stream.column();\n        return tagNameState;\n      } else if (type == \"closeTag\") {\n        return closeTagNameState;\n      } else {\n        return baseState;\n      }\n    }\n\n    function tagNameState(type, stream, state) {\n      if (type == \"word\") {\n        state.tagName = stream.current();\n        setStyle = \"tag\";\n        return attrState;\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return attrState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return tagNameState;\n      }\n    }\n\n    function closeTagNameState(type, stream, state) {\n      if (type == \"word\") {\n        var tagName = stream.current();\n        if (state.context && state.context.tagName != tagName && config.implicitlyClosed.hasOwnProperty(state.context.tagName)) popContext(state);\n\n        if (state.context && state.context.tagName == tagName || config.matchClosing === false) {\n          setStyle = \"tag\";\n          return closeState;\n        } else {\n          setStyle = \"tag error\";\n          return closeStateErr;\n        }\n      } else if (config.allowMissingTagName && type == \"endTag\") {\n        setStyle = \"tag bracket\";\n        return closeState(type, stream, state);\n      } else {\n        setStyle = \"error\";\n        return closeStateErr;\n      }\n    }\n\n    function closeState(type, _stream, state) {\n      if (type != \"endTag\") {\n        setStyle = \"error\";\n        return closeState;\n      }\n\n      popContext(state);\n      return baseState;\n    }\n\n    function closeStateErr(type, stream, state) {\n      setStyle = \"error\";\n      return closeState(type, stream, state);\n    }\n\n    function attrState(type, _stream, state) {\n      if (type == \"word\") {\n        setStyle = \"attribute\";\n        return attrEqState;\n      } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n        var tagName = state.tagName,\n            tagStart = state.tagStart;\n        state.tagName = state.tagStart = null;\n\n        if (type == \"selfcloseTag\" || config.autoSelfClosers.hasOwnProperty(tagName)) {\n          maybePopContext(state, tagName);\n        } else {\n          maybePopContext(state, tagName);\n          state.context = new Context(state, tagName, tagStart == state.indented);\n        }\n\n        return baseState;\n      }\n\n      setStyle = \"error\";\n      return attrState;\n    }\n\n    function attrEqState(type, stream, state) {\n      if (type == \"equals\") return attrValueState;\n      if (!config.allowMissing) setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrValueState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n\n      if (type == \"word\" && config.allowUnquoted) {\n        setStyle = \"string\";\n        return attrState;\n      }\n\n      setStyle = \"error\";\n      return attrState(type, stream, state);\n    }\n\n    function attrContinuedState(type, stream, state) {\n      if (type == \"string\") return attrContinuedState;\n      return attrState(type, stream, state);\n    }\n\n    return {\n      startState: function startState(baseIndent) {\n        var state = {\n          tokenize: inText,\n          state: baseState,\n          indented: baseIndent || 0,\n          tagName: null,\n          tagStart: null,\n          context: null\n        };\n        if (baseIndent != null) state.baseIndent = baseIndent;\n        return state;\n      },\n      token: function token(stream, state) {\n        if (!state.tagName && stream.sol()) state.indented = stream.indentation();\n        if (stream.eatSpace()) return null;\n        type = null;\n        var style = state.tokenize(stream, state);\n\n        if ((style || type) && style != \"comment\") {\n          setStyle = null;\n          state.state = state.state(type || style, stream, state);\n          if (setStyle) style = setStyle == \"error\" ? style + \" error\" : setStyle;\n        }\n\n        return style;\n      },\n      indent: function indent(state, textAfter, fullLine) {\n        var context = state.context; // Indent multi-line strings (e.g. css).\n\n        if (state.tokenize.isInAttribute) {\n          if (state.tagStart == state.indented) return state.stringStartCol + 1;else return state.indented + indentUnit;\n        }\n\n        if (context && context.noIndent) return CodeMirror.Pass;\n        if (state.tokenize != inTag && state.tokenize != inText) return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0; // Indent the starts of attribute names.\n\n        if (state.tagName) {\n          if (config.multilineTagIndentPastTag !== false) return state.tagStart + state.tagName.length + 2;else return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n        }\n\n        if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n        var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n\n        if (tagAfter && tagAfter[1]) {\n          // Closing tag spotted\n          while (context) {\n            if (context.tagName == tagAfter[2]) {\n              context = context.prev;\n              break;\n            } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n              context = context.prev;\n            } else {\n              break;\n            }\n          }\n        } else if (tagAfter) {\n          // Opening tag spotted\n          while (context) {\n            var grabbers = config.contextGrabbers[context.tagName];\n            if (grabbers && grabbers.hasOwnProperty(tagAfter[2])) context = context.prev;else break;\n          }\n        }\n\n        while (context && context.prev && !context.startOfLine) {\n          context = context.prev;\n        }\n\n        if (context) return context.indent + indentUnit;else return state.baseIndent || 0;\n      },\n      electricInput: /<\\/[\\s\\w:]+>$/,\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      configuration: config.htmlMode ? \"html\" : \"xml\",\n      helperType: config.htmlMode ? \"html\" : \"xml\",\n      skipAttribute: function skipAttribute(state) {\n        if (state.state == attrValueState) state.state = attrState;\n      },\n      xmlCurrentTag: function xmlCurrentTag(state) {\n        return state.tagName ? {\n          name: state.tagName,\n          close: state.type == \"closeTag\"\n        } : null;\n      },\n      xmlCurrentContext: function xmlCurrentContext(state) {\n        var context = [];\n\n        for (var cx = state.context; cx; cx = cx.prev) {\n          if (cx.tagName) context.push(cx.tagName);\n        }\n\n        return context.reverse();\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/xml\", \"xml\");\n  CodeMirror.defineMIME(\"application/xml\", \"xml\");\n  if (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\")) CodeMirror.defineMIME(\"text/html\", {\n    name: \"xml\",\n    htmlMode: true\n  });\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [[\"lang\", /(javascript|babel)/i, \"javascript\"], [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"], [\"type\", /./, \"text/plain\"], [null, null, \"javascript\"]],\n    style: [[\"lang\", /^css$/i, \"css\"], [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"], [\"type\", /./, \"text/plain\"], [null, null, \"css\"]]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(),\n        close = cur.search(pat);\n\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n\n    return style;\n  }\n\n  var attrRegexpCache = {};\n\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr));\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\";\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n\n      for (var i = source.length - 1; i >= 0; i--) {\n        dest.unshift(source[i]);\n      }\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags,\n        configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--) {\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode]);\n    }\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState),\n          tag = /\\btag\\b/.test(style),\n          tagName;\n\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) && (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) && tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \";\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag);\n        state.inTag = null;\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2]);\n        var mode = CodeMirror.getMode(config, modeSpec);\n        var endTagA = getTagRegexp(inTag[1], true),\n            endTag = getTagRegexp(inTag[1], false);\n\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current();\n        if (stream.eol()) state.inTag += \" \";\n      }\n\n      return style;\n    }\n\n    ;\n    return {\n      startState: function startState() {\n        var state = CodeMirror.startState(htmlMode);\n        return {\n          token: html,\n          inTag: null,\n          localMode: null,\n          localState: null,\n          htmlState: state\n        };\n      },\n      copyState: function copyState(state) {\n        var local;\n\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n\n        return {\n          token: state.token,\n          inTag: state.inTag,\n          localMode: state.localMode,\n          localState: local,\n          htmlState: CodeMirror.copyState(htmlMode, state.htmlState)\n        };\n      },\n      token: function token(stream, state) {\n        return state.token(stream, state);\n      },\n      indent: function indent(state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter)) return htmlMode.indent(state.htmlState, textAfter, line);else if (state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line);else return CodeMirror.Pass;\n      },\n      innerMode: function innerMode(state) {\n        return {\n          state: state.localState || state.htmlState,\n          mode: state.localMode || htmlMode\n        };\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});"],"sourceRoot":""}